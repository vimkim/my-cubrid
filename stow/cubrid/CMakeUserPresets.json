{
  "version": 3,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 21,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "user_default",
      "hidden": true,
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build_preset_${presetName}",
      "cacheVariables": {
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_INSTALL_PREFIX": "$env{CUBRID}",
        "CUBVEC_TEAM_BUILD": "ON",
        "VIMKIM_BUILD": "ON",
        "WITH_CCI": "true"
      }
    },
    {
      "name": "debug_gcc",
      "inherits": "user_default",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_C_COMPILER_LAUNCHER": "ccache",
        "CMAKE_CXX_COMPILER_LAUNCHER": "ccache",
        "CMAKE_C_FLAGS": "-fdiagnostics-color=always",
        "CMAKE_CXX_FLAGS": "-fdiagnostics-color=always",
        "CMAKE_C_FLAGS_DEBUG": "-O0 -ggdb3 -Wno-int-conversion -Wno-incompatible-pointer-types -Wno-implicit-function-declaration",
        "CMAKE_CXX_FLAGS_DEBUG": "-O0 -ggdb3",
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++",
        "CMAKE_CXX_STANDARD": "17",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON"
      }
    },
    {
      "name": "debug_clang",
      "inherits": "user_default",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_C_COMPILER_LAUNCHER": "ccache",
        "CMAKE_CXX_COMPILER_LAUNCHER": "ccache",
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_CXX_STANDARD": "17",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_C_FLAGS": "-fcolor-diagnostics -O0 -flto=thin -fno-inline -Xclang -fno-validate-pch -Xclang -fno-pch-timestamp -Wno-everything -Wno-non-pod-varargs -Wno-c++11-narrowing -Wno-int-conversion -Wno-implicit-function-declaration",
        "CMAKE_CXX_FLAGS": "-fcolor-diagnostics -O0 -flto=thin -fno-inline -Xclang -fno-validate-pch -Xclang -fno-pch-timestamp -Wno-everything -Wno-non-pod-varargs -Wno-c++11-narrowing -Wno-int-conversion -Wno-implicit-function-declaration",
        "CMAKE_C_FLAGS_DEBUG": "-O0 -ggdb3",
        "CMAKE_CXX_FLAGS_DEBUG": "-O0 -ggdb3"
      }
    },
    {
      "name": "profile_clang",
      "inherits": "debug_clang",
      "cacheVariables": {
        "CMAKE_CXX_STANDARD": "17",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CUBVEC_TEAM_BUILD": "ON",
        "VIMKIM_BUILD": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "WITH_CCI": "true",
        "CMAKE_C_COMPILER_LAUNCHER": "ccache",
        "CMAKE_CXX_COMPILER_LAUNCHER": "ccache",
        "CMAKE_C_FLAGS": "-fcolor-diagnostics -O0 -pg -ggdb -fdebug-macro -flto=thin -fno-inline -Xclang -fno-validate-pch -Xclang -fno-pch-timestamp -Wno-everything -Wno-non-pod-varargs -Wno-c++11-narrowing -Wno-int-conversion -Wno-implicit-function-declaration",
        "CMAKE_CXX_FLAGS": "-fcolor-diagnostics -O0 -pg -ggdb -fdebug-macro -flto=thin -fno-inline -Xclang -fno-validate-pch -Xclang -fno-pch-timestamp -Wno-everything -Wno-non-pod-varargs -Wno-c++11-narrowing -Wno-int-conversion -Wno-implicit-function-declaration",
        "CMAKE_C_FLAGS_DEBUG": "-O0 -ggdb",
        "CMAKE_CXX_FLAGS_DEBUG": "-O0 -ggdb"
      }
    },
    {
      "name": "profile_clang_23",
      "inherits": "debug_clang",
      "cacheVariables": {
        "CMAKE_CXX_STANDARD": "23",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CUBVEC_TEAM_BUILD": "ON",
        "VIMKIM_BUILD": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "WITH_CCI": "true",
        "CMAKE_C_COMPILER_LAUNCHER": "ccache",
        "CMAKE_CXX_COMPILER_LAUNCHER": "ccache",
        "CMAKE_C_FLAGS": "-fcolor-diagnostics -O0 -pg -ggdb -fdebug-macro -flto=thin -fno-inline -Xclang -fno-validate-pch -Xclang -fno-pch-timestamp -Wno-everything -Wno-non-pod-varargs -Wno-c++11-narrowing -Wno-int-conversion -Wno-implicit-function-declaration",
        "CMAKE_CXX_FLAGS": "-fcolor-diagnostics -O0 -pg -ggdb -fdebug-macro -flto=thin -fno-inline -Xclang -fno-validate-pch -Xclang -fno-pch-timestamp -Wno-everythneing -Wno-non-pod-varargs -Wno-c++11-narrowing -Wno-int-conversion -Wno-implicit-function-declaration",
        "CMAKE_C_FLAGS_DEBUG": "-O0 -ggdb",
        "CMAKE_CXX_FLAGS_DEBUG": "-O0 -ggdb"
      }
    },
    {
      "name": "release_clang",
      "inherits": "user_default",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_C_COMPILER_LAUNCHER": "ccache",
        "CMAKE_CXX_COMPILER_LAUNCHER": "ccache",
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_CXX_STANDARD": "17",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_C_FLAGS": "-w -flto=thin -fno-inline -Xclang -fno-validate-pch -Xclang -fno-pch-timestamp -Wno-everything -Wno-non-pod-varargs -Wno-c++11-narrowing -Wno-int-conversion -Wno-implicit-function-declaration -w",
        "CMAKE_CXX_FLAGS": "-w -flto=thin -fno-inline -Xclang -fno-validate-pch -Xclang -fno-pch-timestamp -Wno-everything -Wno-non-pod-varargs -Wno-c++11-narrowing -Wno-int-conversion -Wno-implicit-function-declaration -w"
      }
    },
    {
      "name": "profile_gcc",
      "inherits": "user_default",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_C_COMPILER_LAUNCHER": "ccache",
        "CMAKE_CXX_COMPILER_LAUNCHER": "ccache",
        "CMAKE_C_FLAGS_DEBUG": "-O0 -pg -ggdb3 -w -Wno-error -Wno-int-conversion -Wno-incompatible-pointer-types -Wno-implicit-function-declaration",
        "CMAKE_CXX_FLAGS_DEBUG": "-O0 -pg -ggdb3 -w -Wno-error",
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++",
        "CMAKE_CXX_STANDARD": "17",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "debug_gcc",
      "configurePreset": "debug_gcc"
    },
    {
      "name": "debug_clang",
      "configurePreset": "debug_clang"
    },
    {
      "name": "profile_clang",
      "configurePreset": "profile_clang"
    },
    {
      "name": "profile_clang_23",
      "configurePreset": "profile_clang_23"
    },
    {
      "name": "release_clang",
      "configurePreset": "release_clang"
    },
    {
      "name": "profile_gcc",
      "configurePreset": "profile_gcc"
    }
  ]
}
